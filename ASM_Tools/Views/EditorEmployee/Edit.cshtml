@model ASM_Tools.Models.EmployeeViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "EditorEmployee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container-fluid">
        <h3>@Model.employee.FirstMidName @Model.employee.LastName</h3>
        <h4>Employee @Model.employee.ID</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.employee.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.employee.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.FirstMidName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.FirstMidName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.salutation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.employee.salutation, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.employee.salutation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.JoinedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.JoinedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.JoinedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.JobTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.CompanyEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.CompanyEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.CompanyEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.ResumePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.ResumePath, new { htmlAttributes = new { @class = "form-control" } })
                <input type="file" name="ResumeFile" class="form" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.DisplayPhotoPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="preview" src="@Url.Content(Model.employee.DisplayPhotoPath)" style="max-width:80%;height:auto" />
                <input type="file" name="DisplayPhotoFile" class="form" onchange="previewImg(event)"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.team, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.employee.team, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.employee.team, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tools, new { @class = "control-label col-md-2" })

            <div class="input-group">
                <input type="text" id="Search" placeholder="Search" class="form-control" />

                <select id="DropDownList1" Height="72px" Width="184px">
                    <option Value="">All</option>
                    <option Value="ATS">ATS</option>
                    <option Value="ATW">ATW</option>
                    <option Value="ATC">ATC</option>
                    <option Value="ATHK">ATHK</option>
                    <option value="COC">COC</option>
                </select>
            </div>

            <div class="tools container">
                @{Html.RenderPartial("ToolEditor", Model);}
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<style>
    .tools {
        height: 500px;
        width: 100%;
        overflow-y: auto;
    }
</style>

<script>
    var previewImg = function (event) {
        var result = document.getElementById("preview");
        result.src = URL.createObjectURL(event.target.files[0]);
    };
</script>
